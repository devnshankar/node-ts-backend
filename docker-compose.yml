services:
  postgres:
    container_name: postgres
    env_file:
      - .env.development
    image: postgres
    restart: always
    ports:
      - "5432:${POSTGRESQL_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - guardx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      retries: 10
      timeout: 5s

  node-app:
    env_file:
      - .env.development
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:${PORT}"
    environment:
      PORT: ${PORT}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - guardx-network
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      node-app:
        condition: service_started
    networks:
      - guardx-network

networks:
  guardx-network:
    driver: bridge

volumes:
  postgres_data:
